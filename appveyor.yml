environment:
  matrix:
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      DEVENV_EXE: C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\Common7\IDE\devenv.exe
      VSDEVCMD_BAT: C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\Common7\Tools\VsDevCmd.bat

services:
  - rabbitmq-server
  - redis-server

install:
  # zlib
  - curl -fsSL -o zlib.tar.gz https://github.com/madler/zlib/archive/v1.2.8.tar.gz
  - 7z x zlib.tar.gz -so | 7z x -si -ttar > nul
  - move zlib-1.2.8 zlib
  - cd zlib
  - cmake .
  - cmake --build .
  - cd ..

  # Download and start a binary version of memcached.
  - appveyor DownloadFile "https://s3.amazonaws.com/downloads.northscale.com/memcached-win64-1.4.4-14.zip" -FileName memcached.zip
  - 7z x memcached.zip -y
  - ps: $Memcached = Start-Process memcached\memcached.exe -PassThru

  # Berkeley DB - required by SASL
  - curl -fsSL -o db-4.1.25.tar.gz http://download.oracle.com/berkeley-db/db-4.1.25.tar.gz
  - 7z x db-4.1.25.tar.gz -so | 7z x -si -ttar > nul
  - move db-4.1.25 db
  - cd db\build_win32
  - echo using devenv %DEVENV_EXE%
  - '%DEVENV_EXE% db_dll.dsp /upgrade'
  - msbuild /p:Configuration=Release db_dll.vcxproj
  - cd ..\..

  # SASL
  # - ps: "Invoke-WebRequest -Uri https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz -outfile libmemcached.tar.gz"
  - curl -fsSL -o cyrus-sasl-2.1.26.tar.gz ftp://ftp.cyrusimap.org/cyrus-sasl/cyrus-sasl-2.1.26.tar.gz
  - 7z x cyrus-sasl-2.1.26.tar.gz -so | 7z x -si -ttar > nul
  - move cyrus-sasl-2.1.26 sasl
  - cd sasl
  - patch -p1 -i ..\sasl-fix-snprintf-macro.patch
  - echo using vsdevcmd %VSDEVCMD_BAT%
  - '%VSDEVCMD_BAT%'
  - ps: write-host $pwd.Path
  - nmake /f NTMakefile OPENSSL_INCLUDE=c:\OpenSSL-Win32\include OPENSSL_LIBPATH=c:\OpenSSL-Win32\lib DB_INCLUDE=c:\projects\dramatiq\db\build_win32 DB_LIBPATH=c:\projects\dramatiq\db\build_win32\release DB_LIB=libdb41.lib install
  - cd ..
  - ps: write-host $pwd.Path
  # go back to source root
  - cd ..
  - ps: write-host $pwd.Path

  # Download libmemcached sources to use when installing pylibmc.
  - ps: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12"
  - ps: "Invoke-WebRequest -Uri https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz -outfile libmemcached.tar.gz"
  - appveyor DownloadFile "https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz" -FileName libmemcached.tar.gz
  - 7z x libmemcached.tar.gz -so | 7z x -aoa -si -ttar -oC:\\
  - ls C:\\libmemcached-1.0.18

  # Install python and pip.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "%CMD_IN_ENV% python --version"
  - "%CMD_IN_ENV% python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "%CMD_IN_ENV% python -m pip install --upgrade pip"

  - choco install rabbitmq redis-64
  - ps: write-host $pwd.Path
    # ;C:\\projects\\dramatiq\\sasl\\include
  - '%CMD_IN_ENV% pip install --global-option="build_ext" --global-option="-IC:\\libmemcached-1.0.18;c:\\cmu\\include;C:\\projects\\dramatiq\\zlib" --global-option="-LC:\\libmemcached-1.0.18" pylibmc'
  - '%CMD_IN_ENV% pip install -r requirements/dev.txt'

build_script:
  - "%CMD_IN_ENV% python setup.py build"

test_script:
  - "%CMD_IN_ENV% py.test"

after_test:
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - "%CMD_IN_ENV% python setup.py bdist_msi"
  - ps: "ls dist"

on_failure:
  - ps: "Get-Content \"C:\\ProgramData\\chocolatey\\logs\\chocolatey.log\" -Tail 30"
